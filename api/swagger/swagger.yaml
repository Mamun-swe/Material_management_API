swagger: "2.0"
info:
  version: "0.0.1"
  title: RESTful APIs of Material Management App
host: localhost:3000
basePath: /api
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json
paths:

  /oauth/token:
    x-swagger-router-controller: main-controller
    post:
      tags:
      - User Authentication
      operationId: loginPost
      summary: "Authorization for the access of other APIs"
      description: "Login with a valid credential"
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Invalid Access Token!!"
          schema:
            $ref: "#/definitions/Error"

  # /logout:
  #   x-swagger-router-controller: main-controller
  #   post:
  #     tags:
  #     - User Authentication
  #     operationId: logoutPost
  #     summary: "Logout from the session"
  #     description: "Logout will destroy your access token"
  #     security:
  #       - Bearer: []
  #     x-security-scopes:
  #       - admin
  #     responses:
  #       "200":
  #         description: "Success"
  #         schema:
  #           $ref: "#/definitions/Resource"
  #       "404":
  #         description: "Access Denied"
  #         schema:
  #           $ref: "#/definitions/Error"

  /appUser/{user_id}:
    x-swagger-router-controller: main-controller
    get:
      tags:
      - User Authentication
      operationId: appUser
      summary: "Get App User Involvements"
      description: "Fetch app-user associated with the authorized user"
      # security:
      #   - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/AppUser"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /uploadSupplementaryDoc:
    x-swagger-router-controller: upload-controller
    post:
      tags:
      - Supplementary Document File
      operationId: uploadSupplementaryDoc
      consumes:
        - multipart/form-data      
      summary: "Upload a Supplementary Document"
      description: "Upload the supplementary document before crraeting backfill/disposal requests"
      # security:
      #   - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - in: "formData"
          name: "supplementary_file"
          description: "Supplementary Document"
          required: true
          type: file  
          x-mimetype: image/png, image/jpeg, application/pdf           
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"         

  /deleteSupplementaryDoc:
    x-swagger-router-controller: upload-controller
    post:
      tags:
      - Supplementary Document File
      operationId: deleteSupplementaryDoc
      summary: "Delete Supplementary Document"
      description: "Remove a supplementary document by a given id"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: fileDeletion
          in: body
          required: true
          schema:
            $ref: "#/definitions/DocumentDeletion"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"         

  /projectByDepartment/{department_key}:
    x-swagger-router-controller: main-controller
    get:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: projectByDepartment
      summary: "List all projects by a given depertment key"
      description: "Get details of all projects by a selected department"
      # security:
      #   - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "department_key"
          in: "path"
          description: "Department Key"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Project"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /createRequest:
    x-swagger-router-controller: create_request-controller
    post:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: createRequest
      summary: "Request Creation"
      description: "Create a Backfill/Disposal Request"
      parameters:
        - name: requestCreation
          in: body
          required: true
          schema:
            $ref: "#/definitions/CreateRequest"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Creation Failure"
          schema:
            $ref: "#/definitions/Error"

  /listUserRequests/{user_id}/{request_type}:
    x-swagger-router-controller: list_requests-controller
    get:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: listUserRequests
      summary: "List User Created Disposal/Backfill Requests"
      description: "Get User Created Disposal/Backfill Requests"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "request_type"
          in: "path"
          description: "Request Type"
          required: true
          type: "string"
          enum: [Disposal, Backfill]
      responses:
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/ListRequest"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /listGlobalRequests/{user_id}/{request_type}:
    x-swagger-router-controller: list_requests-controller
    get:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: listGlobalRequests
      summary: "List Global Disposal/Backfill Requests"
      description: "Get Disposal/Backfill Requests which are not Created by User"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "request_type"
          in: "path"
          description: "Request Type"
          required: true
          type: "string"
          enum: [Disposal, Backfill]
      responses:
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/ListRequest"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"  

  /requestDetails/{request_id}/{user_id}:
    x-swagger-router-controller: request_details-controller
    get:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: requestDetails
      summary: "Request Details"
      description: "Get Request Details"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "request_id"
          in: "path"
          description: "Request ID"
          required: true
          type: "integer"
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success: contacts, project-team and supplementary documents will be available for user-created requests"
          schema:
            $ref: "#/definitions/RequestDetails"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /listUserRequestsWithMatches/{user_id}/{request_type}:
    x-swagger-router-controller: list_requests_with_matches-controller
    get:
      tags:
        - Manage & View Backfill/Disposal Requests with Matches
      operationId: listUserRequestsWithMatches
      summary: "List User Created Disposal/Backfill Requests with Matches"
      description: "Get User Created Disposal/Backfill Requests with Matches"
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
      parameters:
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "request_type"
          in: "path"
          description: "Request Type"
          required: true
          type: "string"
          enum: [ Disposal, Backfill ]
      responses:
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/OwnRequests"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /confirmMatches:
    x-swagger-router-controller: confirm_match-controller
    post:
      tags:
        - Manage & View Backfill/Disposal Requests with Matches
      operationId: confirmMatches
      summary: "Create Match(es)"
      description: "Create One/More Matches of a Request"
      parameters:
        - name: requestCreation
          in: body
          required: true
          schema:
            $ref: "#/definitions/MatchesPerRequest"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Creation Failure"
          schema:
            $ref: "#/definitions/Error"

  /manageDocuments:
    x-swagger-router-controller: manage_compulsory_documents-controller
    put:
      tags:
        - Manage & View Backfill/Disposal Requests with Matches
      operationId: manageDocuments
      summary: "Update/Remove Compulsory Documents for Matched Requests"
      description: "Manage Compulsory Documents - type uploaded file-name or 'na' to remove"
      parameters:
        - name: requestEdition
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateCompulsoryDocument"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Creation Failure"
          schema:
            $ref: "#/definitions/Error"

  /matchDetails/{user_id}/{own_request_id}/{matched_request_id}:
    x-swagger-router-controller: match_details-controller
    get:
      tags:
        - Manage & View Backfill/Disposal Requests with Matches
      operationId: matchDetails
      summary: "Create Match(es)"
      description: "Get the summary of a both-confirmed match"
      parameters:
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "own_request_id"
          in: "path"
          description: "Own Request ID"
          required: true
          type: "string"
        - name: "matched_request_id"
          in: "path"
          description: "Matched Request ID"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Creation Failure"
          schema:
            $ref: "#/definitions/Error"

  /cancelMatch:
    x-swagger-router-controller: cancel_match-controller
    post:
      tags:
        - Manage & View Backfill/Disposal Requests with Matches
      operationId: cancelMatch
      summary: "Create Match(es)"
      description: "Cancel a selected match after adjusting material volumes"
      parameters:
        - name: requestCreation
          in: body
          required: true
          schema:
            $ref: "#/definitions/MatchRequest"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Creation Failure"
          schema:
            $ref: "#/definitions/Error"

  /updateRequest:
    x-swagger-router-controller: update_request-controller
    put:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: updateRequest
      summary: "Updating Request"
      description: "Update an Existing Backfill/Disposal Request"
      parameters:
        - name: requestEdition
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateRequest"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Request Updating Failure"
          schema:
            $ref: "#/definitions/Error"        

  /deleteRequest/{request_id}/{user_id}/{department_key}:
    x-swagger-router-controller: delete_request-controller
    delete:
      tags:
      - Manage & View Requests (Backfill/Disposal)
      operationId: deleteRequest
      summary: "Delete Request"
      description: "Delete user-created request"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: "request_id"
          in: "path"
          description: "Request ID"
          required: true
          type: "integer"
        - name: "user_id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "department_key"
          in: "path"
          description: "Department Key"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "404":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

definitions:
  Authentication:
    type: object
    properties:
      email:
        type: string
        example: "user2@hiphing.com.hk"
      password:
        type: string
        example: "pw2"  
  AppUser:
    properties:
      user_id:
        type: "string"
      staff_id:
        type: "string"
      last_name:
        type: "string"
      first_name:
        type: "string"
      english_name:
        type: "string"
      chinese_name:
        type: "string"
      email:
        type: "string"
      department_key:
        type: "string"
      department_id:
        type: "string"
      dept_name:
        type: "string"
      dept_chi_name:
        type: "string"
      position_key:
        type: "string"
      position_name:
        type: "string"
      post_name:
        type: "string"
      post_chi_name:
        type: "string"
      role_id:
        type: "string"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Project:
    properties:
      department_key:
        type: "string"
      department_id:
        type: "string"
      projectName:
        type: "string"
      projectNameChin:
        type: "string"
      projDescription:
        type: "string"
      address:
        type: "string"
      govtRefNo:
        type: "string"
      projStatus:
        type: "string"
      rstatus:
        type: "string"
      latitude:
        type: "string"
      longitude:
        type: "string"
      contractType:
        type: "string"
  ListRequest:
    properties:
      id:
        type: "string"
      department_key:
        type: "string"
      filling_purpose:
        type: "string"
        enum: [Permanent, Temporary]
      material_type:
        type: "string"
      material_quality:
        type: "string"
      material_volume:
        type: "number"
        multipleOf: 0.01
      schedule_start_date:
        type: "string"
        format: "date-time"
      schedule_end_date:
        type: "string"
        format: "date-time"
  OwnRequests:
    properties:
      id:
        type: "integer"
      department_key:
        type: "string"
      filling_purpose:
        type: "string"
        enum: [ Permanent, Temporary ]
      material_type:
        type: "string"
        enum: [ Soil, Rock, Broken Concrete ]
      material_quality:
        type: "string"
      material_volume:
        type: "number"
        multipleOf: 0.01
      matched_volume:
        type: "number"
        multipleOf: 0.01
      available_volume:
        type: "number"
        multipleOf: 0.01
      schedule_start_date:
        type: "string"
        format: "date"
      schedule_end_date:
        type: "string"
        format: "date"
      project_address:
        type: "string"
      matches:
        type: array
        items:
          properties:
            matched_request_id:
              type: "integer"
            department_key:
              type: "string"
            filling_purpose:
              type: "string"
              enum: [ Permanent, Temporary ]
            material_type:
              type: "string"
              enum: [ Soil, Rock, Broken Concrete ]
            material_quality:
              type: "string"
            material_volume:
              type: "number"
              multipleOf: 0.01
            schedule_start_date:
              type: "string"
              format: "date"
            schedule_end_date:
              type: "string"
              format: "date"
            project_address:
              type: "string"
            status:
              type: "string"
              enum: [ Not confirmed, Our side confirmed, Other side confirmed, Both confirmed ]
  CreateRequest:
    properties:
      user_id:
        type: "string"
        example: "KNC01"
      department_key:
        type: "string"
        example: "17810"
      project_address:
        type: "string"
        example: "Kai Tak, Kowloon City District, Hong Kong"
      request_type:
        type: "string"
        enum: [Disposal, Backfill]
        example: "Backfill"
      filling_purpose:
        type: "string"
        enum: [Permanent, Temporary]
        example: "Permanent"
      material_type:
        type: "string"
        enum: [Soil, Rock, Broken Concrete]
        example: "Soil"
      material_quality:
        type: "string"
        example: "General"
      material_volume:
        type: "number"
        multipleOf: 0.01
        example: 400.50
      material_unit:
        type: "string"
        example: "m3"
      matched_volume:
        type: "number"
        multipleOf: 0.01
        example: 200
      available_volume:
        type: "number"
        multipleOf: 0.01
        example: 75
      schedule_start_date:
        type: "string"
        format: "date-time"
        example: "2021-09-12"
      schedule_end_date:
        type: "string"
        format: "date-time"
        example: "2021-09-18"
      schedule_status:
        type: "string"
        enum: [Preliminary, Confirmed]
        example: "Confirmed"
      remarks:
        type: "string"
        example: "some remarks..."
      supplementary_document_names:
        type: "string"
        example: "docA,docB"
      supplementary_documents:
        type: "string"
        example: "A.jpg,B.pdf"
      contact_names:
        type: "string"
        example: "Mac Jayson,Dulton Jr."
      contact_phones:
        type: "string"
        example: "(111)1111 111,(222)2222 222"
  UpdateRequest:
    properties:
      id:
        type: "integer"
      user_id:
        type: "string"
        example: "KNC01"
      department_key:
        type: "string"
        example: "17810"
      project_address:
        type: "string"
        example: "Kai Tak, Kowloon City District, Hong Kong"
      request_type:
        type: "string"
        enum: [Disposal, Backfill]
        example: "Backfill"
      filling_purpose:
        type: "string"
        enum: [Permanent, Temporary]
        example: "Temporary"
      material_type:
        type: "string"
        example: "Soil, Rock"
      material_quality:
        type: "string"
        example: "General"
      material_volume:
        type: "number"
        multipleOf: 0.01
        example: 400.50
      material_unit:
        type: "string"
        example: "m3"
      matched_volume:
        type: "number"
        multipleOf: 0.01
        example: 200
      available_volume:
        type: "number"
        multipleOf: 0.01
        example: 75
      schedule_start_date:
        type: "string"
        format: "date-time"
        example: "2021-07-31"
      schedule_end_date:
        type: "string"
        format: "date-time"
        example: "2021-08-11"
      schedule_status:
        type: "string"
        enum: [Preliminary, Confirmed]
        example: "Confirmed"
      remarks:
        type: "string"
        example: "some remarks..."
      supplementary_document_names:
        type: "string"
        example: "docA,docB"
      supplementary_documents:
        type: "string"
        example: "A.jpg,B.pdf"
      contact_names:
        type: "string"
        example: "Mac Jayson,Dulton Jr."
      contact_phones:
        type: "string"
        example: "(111)1111 111,(222)2222 222"      
  RequestDetails:
    properties:
      request_info:
        properties:
          filling_purpose:
            type: "string"
            enum: [Permanent, Temporary]
          material_type:
            type: "string"
          material_quality:
            type: "string"
          material_volume:
            type: "string"
          schedule_start_date:
            type: "string"
            format: "date-time"
          schedule_end_date:
            type: "string"
            format: "date-time"
          schedule_status:
            type: "string"
            enum: [Preliminary, Confirmed]  
          remarks:
            type: "string"
      project_info:
        properties:
          code:
            type: "string"
          name:
            type: "string"
          address:
            type: "string"
          latitude:
            type: "string"
          longitude:
            type: "string"
      contact_info:
        type: array
        items:
          properties:      
            name:
              type: "string"
            phone:
              type: "string"
      project_team:
        type: array
        items:
          properties:
            name:
              type: "string"
            position:
              type: "string"
      supplementary_documents:
        type: array
        items:
          properties:
            name:
              type: "string"
            document_path:
              type: "string"
  UpdateCompulsoryDocument:
    properties:
      document_id:
        type: "integer"
        example: "3004"
      documents:
        type: "string"
        example: "A.jpg,B.pdf"
  DocumentDeletion:
    type: object
    properties:
      supplementary_document:
        type: string
  MatchesPerRequest:
    properties:
      user_id:
        type: string
      own_request_id:
        type: integer
        format: int64
      matched_requests:
        type: array
        items:
          type: integer
        uniqueItems: true
  MatchRequest:
    properties:
      user_id:
        type: string
      own_request_id:
        type: integer
        format: int64
      matched_request_id:
        type: integer
        format: int64
  Token:
    properties:
      access_token:
        type: "string"
      token_type:
        type: "string"
      expires_in:
        type: "integer"
        format: "int64"
      user_id:
        type: "string"
      scope:
        type: "string"
  Success:
    type: object
    properties:
      status:
        type: boolean
      message:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
